---
- name: Installting Concourse
  hosts: all
  become: true

  tasks:
  - name: Change to Sudo Su

  - name: Update and Upgrade

  - name: Upgrade all packages to the latest version
    apt:
      name: "*"
      state: latest

  - name: Update all packages to the latest version
    apt:
      upgrade: dist

  - name: Run the equivalent of "apt-get update" as a separate step
    apt:
      update_cache: yes

  - name: Install postgresql

  - name: Install PostgreSQL
    apt: name={{ item }} update_cache=true state=installed
    with_items:
      - postgresql
      - postgresql-contrib
      - libpq-dev
      - python-psycopg2
    tags: packages

  - name: Enable postgresql

  - name: Ensure the PostgreSQL service is running
    service: name=postgresql state=started enabled=yes

  - name: create user for postgresql

  - name: Create a PostgreSQL DB server
    hosts: dbserver
    sudo: yes
    sudo_user: root
    remote_user: ubuntu
    vars_files:
      db_user: dbusername
      db_name: dbname
      db_password: dbpassword

  - name: creating db of postgresql

  - name: Download Concourse

  - name: Download foo.conf
    get_url:
      url: https://github.com/concourse/concourse/releases/download/v3.9.0/concourse_linux_amd64
     # dest: /etc/foo.conf
     # mode: '0440'

  - name: Download fly

  - name: Download foo.conf
    get_url:
      url: https://github.com/concourse/concourse/releases/download/v3.9.0/fly_linux_amd64

  - name: Permission to executable

  - name: Change file ownership, group and permissions
    file:
      path: /etc/foo.conf
      owner: foo
      group: foo
      mode: '0644'
     #or
  - name: Changing perm of "/foo/bar.sh", adding "+x"
    file: dest=/foo/bar.sh mode=a+x

  - name: Move concourse to folder

  - name: Move foo to bar
    command: mv /path/to/foo /path/to/bar

  - name: Move fly to folder

  - name: Move foo to bar
    command: mv /path/to/foo /path/to/bar

  - name: Make directory of concourse

  - name: Creates directory
    file:
      path: /src/www
      state: directory


  - name: create ssh keys

  - name: Move foo to bar
    command: ssh-keygen -t rsa -q -N '' -f /etc/concourse/tsa_host_key
  - name: Move foo to bar
    command: ssh-keygen -t rsa -q -N '' -f /etc/concourse/worker_key
  - name: Move foo to bar
    command: ssh-keygen -t rsa -q -N '' -f /etc/concourse/session_signing_key


  - name: copy keys to authorized
  
  - name: Move foo to bar
    command: cp /etc/concourse/worker_key.pub /etc/concourse/authorized_worker_keys


  - name: create web environment with some data

  - name: Ansible create file with content example
    copy:
      dest: "/etc/concourse/web_environment"
      content: |
        CONCOURSE_SESSION_SIGNING_KEY=/etc/concourse/session_signing_key
        CONCOURSE_TSA_HOST_KEY=/etc/concourse/tsa_host_key
        CONCOURSE_TSA_AUTHORIZED_KEYS=/etc/concourse/authorized_worker_keys
        CONCOURSE_POSTGRES_SOCKET=/var/run/postgresql

        CONCOURSE_BASIC_AUTH_USERNAME=admin
        CONCOURSE_BASIC_AUTH_PASSWORD=secret
        CONCOURSE_EXTERNAL_URL=http://10.20.30.40:8080


  - name: create worker environment with data

  - name: Ansible create file with content example
    copy:
      dest: "/etc/concourse/worker_environment"
      content: |
        CONCOURSE_WORK_DIR=/var/lib/concourse
        CONCOURSE_TSA_WORKER_PRIVATE_KEY=/etc/concourse/worker_key
        CONCOURSE_TSA_PUBLIC_KEY=/etc/concourse/tsa_host_key.pub
        CONCOURSE_TSA_HOST=127.0.0.1


  - name: Create concourse user

  - name: Permission
    command: sudo adduser --system --group concourse

  - name: change user permissions

  - name: Permission
    command: sudo chown -R concourse:concourse /etc/concourse

  - name: change mode permissions

  - name: Permission mode
    command: sudo chmod 600 /etc/concourse/*_environment

  - name: create web.service

  - name: Ansible create file with content example
    copy:
      dest: "/etc/systemd/system/concourse-web.service"
      content: |
        [Unit]
        Description=Concourse CI web process (ATC and TSA)
        After=postgresql.service

        [Service]
        User=concourse
        Restart=on-failure
        EnvironmentFile=/etc/concourse/web_environment
        ExecStart=/usr/bin/concourse web

        [Install]
        WantedBy=multi-user.target

  - name: create worker.service

  - name: Ansible create file with content example
    copy:
      dest: "/etc/systemd/system/concourse-worker.service"
      content: |
        [Unit]
        Description=Concourse CI worker process
        After=concourse-web.service

        [Service]
        User=root
        Restart=on-failure
        EnvironmentFile=/etc/concourse/worker_environment
        ExecStart=/usr/bin/concourse worker

        [Install]
        WantedBy=multi-user.target

  - name: start web and worker

  - name: Permission mode
    command: sudo systemctl start concourse-web concourse-worker

  - name: enable web and worker

  - name: Permission mode
    command: sudo systemctl enable concourse-web concourse-worker

  - name: status of web and worker

  - name: Permission mode
    command: sudo systemctl status concourse-web concourse-worker

